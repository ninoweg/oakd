<?xml version="1.0"?>
<launch>
    <!-- <args for urdf/> -->
    <arg name="camera_model"         default="OAK-D"            /> <!-- 'zed' or 'zedm' -->
    <arg name="tf_prefix"            default="oak"              />
    <arg name="mode"                 default="depth"            />
    <arg name="base_frame"           default="oak-d_frame"      />
    <arg name="parent_frame"         default="oak-d-base-frame" /> 

    <arg name="cam_pos_x"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_y"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_pos_z"             default="0.0" /> <!-- Position respect to base frame (i.e. "base_link) -->
    <arg name="cam_roll"              default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_pitch"             default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->
    <arg name="cam_yaw"               default="0.0" /> <!-- Orientation respect to base frame (i.e. "base_link) -->

    <arg name="rviz"                  default="false"/>
    <arg name="convertToPointcloud"   default="false" />
    <arg name="convertToMeters"       default="false" />

    <!-- publish robot_model and tf -->
    <include file="$(find depthai_bridge)/launch/urdf.launch">
        <arg name="base_frame"      value="$(arg  base_frame)"  />
        <arg name="parent_frame"    value="$(arg  parent_frame)"/>
        <arg name="camera_model"    value="$(arg  camera_model)"/>
        <arg name="tf_prefix"       value="$(arg  tf_prefix)" />
        <arg name="cam_pos_x"       value="$(arg  cam_pos_x)"   />
        <arg name="cam_pos_y"       value="$(arg  cam_pos_y)"   />
        <arg name="cam_pos_z"       value="$(arg  cam_pos_z)"   />
        <arg name="cam_roll"        value="$(arg  cam_roll)"    />
        <arg name="cam_pitch"       value="$(arg  cam_pitch)"   />
        <arg name="cam_yaw"         value="$(arg  cam_yaw)"     />
    </include>

    <!-- run depthai_oakd_node -->
    <node name="oakd" pkg="oakd" type="oakd_node" output="screen" required="true" />         

    <node pkg="nodelet" type="nodelet" name="nodelet_manager"  args="manager" output="screen"/>

    <!-- convert stereo/depth (in mm) to stereo/image (in m) -->
    <node if="$(eval arg('convertToMeters') == true)" pkg="nodelet" type="nodelet" name="depth_image_convertion_nodelet"
        args="load depth_image_proc/convert_metric nodelet_manager">
        <remap from="image_raw" to="/oakd/stereo/depth"/>    
        <remap from="image" to="/oakd/stereo/image"/>
    </node>

    <!-- convert depthImage to Pointcloud -->
    <node if="$(eval arg('convertToPointcloud') == true)" pkg="nodelet" type="nodelet" name="depth_image_to_rgb_pointcloud"
        args="load depth_image_proc/point_cloud_xyzrgb nodelet_manager">
        <param name="queue_size"          value="10"/>

        <remap from="rgb/camera_info" to="oakd/color/camera_info"/>
        <remap from="rgb/image_rect_color" to="oakd/color/image"/>
        <remap from="depth_registered/image_rect" to="oakd/stereo/image"/>    
        <remap from="depth_registered/points" to="oakd/stereo/points"/>
    </node>

  <group if="$(eval arg('rviz') == true)">
    <node type="rviz" name="rviz" pkg="rviz" args="-d $(find oakd)/rviz/oakd_preset.rviz" />
  </group>

</launch>

